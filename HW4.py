#HW4
# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с
# повторениями). Выдать без повторений в порядке возрастания все те числа, которые
# встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы множеств.

# n = int(input("Введите количество цифр первого множества: "))
# n_mn = []
# for i in range(n):
#     n_mn.append(int(input("Введите первое множество: ")))
# print(n_mn)

# m = int(input("Введите количество цифр второго множества: "))
# m_mn = []
# for i in range(m):
#     m_mn.append(int(input("Введите второе множество: ")))
# print(m_mn)

# obshee = n_mn + m_mn
# checked_nums_list = []
# for i in obshee:
#     if obshee.count(i) > 1 and i not in checked_nums_list:
#         checked_nums_list.append(i)
#         print(i)

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
# круглой грядке, причем кусты высажены только по окружности. Таким образом, у
# каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai
#  ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.

n = int(input("Введите количество кустов: "))
arr = list()
for i in range(n):
    x=int(input("Введите кол-во ягод на каждом из кустов: "))
    arr.append(x)
print(arr)

arr_count = list()
for i in range(len(arr)-1):
    arr_count.append(arr[i-1] + arr[i] + arr[i+1])
arr_count.append(arr[-2]+arr[-1] + arr[0])
print(max(arr_count))